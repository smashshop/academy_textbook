<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
	<!-- 방법1 직접 JDBC 정보를 입력 -->
	<bean id = "hikariConfig" class = "com.zaxxer.hikari.HikariConfig"><!-- 
		<property name="driverClassName" value = "oracle.jdbc.OracleDriver"/>
		<property name="jdbcUrl" value = "jdbc:oracle:thin:@localhost:1521:xe"/> -->
		<!-- SQL로그 확인용 -->
		<property name="driverClassName" value = "net.sf.log4jdbc.sql.jdbcapi.DriverSpy"/>
		<property name="jdbcUrl" value = "jdbc:log4jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value = "book_ex"/>
		<property name="password" value = "book_ex"/>
	</bean>
	
	<bean id = "dataSource" class = "com.zaxxer.hikari.HikariDataSource" destroy-method = "close">
		<constructor-arg ref = "hikariConfig"/>
	</bean>
	<!-- 방법2 JDBC 설정 정보가 저장된 프로퍼티스 사용 -->
	<!--배포용<context:property-placeholder location = "classpath:/WEB-INF/jdbcConfig/jdbc.properties"/>-->
	<!--JUNIT 테스트용<context:property-placeholder location = "classpath:jdbcConfig/jdbc.properties"/> -->

	<!-- <bean id = "hikariConfig" class = "com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value = "${jdbcHikari.driverClassName}"/>
		<property name="jdbcUrl" value = "${jdbcHikari.jdbcUrl}"/>
		<property name="username" value = "${jdbcHikari.username}"/>
		<property name="password" value = "${jdbcHikari.password}"/>
	</bean>
	
	<bean id = "dataSource" class = "com.zaxxer.hikari.HikariDataSource" destroy-method = "close">
		<constructor-arg ref = "hikariConfig"/>
	</bean> -->
	
	<bean id = "sqlSessionFactory" class = "org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref = "dataSource"/>
		
		<!-- <property name="configLocation" value="classpath:com/spring5218/mypro00/mapper/mapper/mybatisConfig.xml"/> -->
		<!-- mybatis-spring 버전 1.X 부터  <property name="mapperLocations" value="classpath:경로명/*Mapper.xml"> 처럼
    	value 속성에 하나의 값만 설정해야 했습니다. 버전2 부터 mapperLocations에 여러 개의 매퍼파일들을 
    	아래처럼 정의할 수 있습니다. -->
        <property name="mapperLocations">
            <list>
                <value>classpath:mapper/BoardMapper.xml</value>
                <value>classpath:mapper/BoardMapperDAO.xml</value>
                <value>classpath:mapper/ReplMapper.xml</value>
            </list>
        </property>
	</bean>
	
	<bean id = "sqlSession" class = "org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index = "0" ref = "sqlSessionFactory"/>
	</bean>
	
	<!-- 매퍼인터페이스 빈 자동 생성  -->
	<mybatis-spring:scan base-package="com.spring5.pro00.mapper"/>
</beans>